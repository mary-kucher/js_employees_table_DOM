{"version":3,"sources":["scripts/main.js"],"names":["column","head","document","querySelector","table","body","ascending","num","str","replace","sortRows","arr","index","sort","a","b","first","cells","innerText","second","isNaN","localeCompare","reSortRows","addEventListener","ev","item","itemIndex","target","closest","cellIndex","rows","forEach","tr","append","activeRow","classList","remove","add","container","createElement","insertAdjacentHTML","form","buttonSubmit","fieldsForm","querySelectorAll","pushNotification","title","description","type","notification","setTimeout","n","validateForm","fields","field","value","trim","length","name","children","hidden","preventDefault","newRow","inputValue","newCell","toUpperCase","slice","parseInt","toLocaleString","reset","activeCell","activeCellIndex","cellText","textContent","inputCell","cloneNode","style","width","getComputedStyle","onblur","td","ev2","key","blur"],"mappings":"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","file":"main.87888106.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst head = document.querySelector('thead');\nconst table = document.querySelector('tbody');\nconst body = document.querySelector('body');\nlet column;\nlet ascending = true;\n\nhead.addEventListener('click', (ev) => {\n  const item = ev.target.closest('th');\n  const itemIndex = item.cellIndex;\n\n  if (column === itemIndex && ascending) {\n    return reSortRows([...table.rows], itemIndex).forEach(tr => {\n      table.append(tr);\n    });\n  }\n\n  sortRows([...table.rows], itemIndex).forEach(tr => {\n    table.append(tr);\n  });\n  column = itemIndex;\n});\n\nfunction num(str) {\n  return +str.replace(/[,$]/g, '');\n}\n\nfunction sortRows(arr, index) {\n  ascending = true;\n\n  return arr.sort((a, b) => {\n    const first = a.cells[index].innerText;\n    const second = b.cells[index].innerText;\n\n    if (isNaN(num(first))) {\n      return first.localeCompare(second);\n    } else {\n      return num(first) - num(second);\n    }\n  });\n}\n\nfunction reSortRows(arr, index) {\n  ascending = false;\n\n  return arr.sort((a, b) => {\n    const first = a.cells[index].innerText;\n    const second = b.cells[index].innerText;\n\n    if (isNaN(num(first))) {\n      return second.localeCompare(first);\n    } else {\n      return num(second) - num(first);\n    }\n  });\n}\n\ntable.addEventListener('click', (ev) => {\n  const item = ev.target.closest('tr');\n\n  const activeRow = table.querySelector('.active');\n\n  if (activeRow) {\n    activeRow.classList.remove('active');\n  }\n  item.classList.add('active');\n});\n\nconst container = document.createElement('container');\n\ncontainer.classList.add('notificationContainer');\nbody.append(container);\n\ncontainer.insertAdjacentHTML('afterbegin',\n  `<form class=\"new-employee-form\">\n    <label>Name:\n      <input name=\"name\" data-qa=\"name\" type=\"text\" required>\n    </label>\n    <label>Position:\n      <input name=\"position\" data-qa=\"position\" type=\"text\" required>\n    </label>\n    <label>Office:\n      <select name=\"select-office\" data-qa=\"office\" required>\n        <option disabled selected value=\"\" hidden></option>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New-York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input name=\"age\" data-qa=\"age\" type=\"number\" required>\n    </label>\n    <label>Salary:\n      <input name=\"salary\" data-qa=\"salary\" type=\"number\" required>\n    </label>\n    <button type=\"submit\">Save to table</button>\n  </form>`\n);\n\nconst form = document.querySelector('form');\nconst buttonSubmit = document.querySelector('button');\nconst fieldsForm = document.querySelectorAll('input, select');\n\nbuttonSubmit.addEventListener('click', (ev) => {\n  ev.preventDefault();\n\n  const newRow = document.createElement('tr');\n\n  if (!validateForm(fieldsForm)) {\n    return;\n  }\n\n  [...fieldsForm].forEach(field => {\n    const inputValue = field.value;\n    const newCell = document.createElement('td');\n\n    table.append(newRow);\n\n    if (field.name !== 'salary') {\n      newCell.append(`${inputValue[0]\n        .toUpperCase()}${inputValue.slice(1, inputValue.length)}`);\n    } else {\n      newCell.append(`$${parseInt(inputValue).toLocaleString('en-US')}`);\n    }\n    newRow.append(newCell);\n  });\n  form.reset();\n\n  pushNotification('Done',\n    'A new employee is successfully added to the table.\\n', 'success');\n});\n\ntable.addEventListener('dblclick', (ev) => {\n  const activeCell = ev.target.closest('td');\n  const activeCellIndex = activeCell.cellIndex;\n  const cellText = activeCell.textContent;\n  const inputCell = fieldsForm[activeCellIndex].cloneNode(true);\n\n  inputCell.classList.add('cell-input');\n  inputCell.style.width = `${parseInt(getComputedStyle(activeCell).width)}px`;\n\n  if (!activeCell.querySelector('input')) {\n    activeCell.textContent = '';\n    inputCell.value = cellText;\n    activeCell.append(inputCell);\n\n    if (inputCell.name === 'salary') {\n      inputCell.value = num(cellText);\n    }\n  }\n\n  inputCell.onblur = function() {\n    let inputValue = inputCell.value;\n    const td = inputCell.closest('td');\n\n    if (inputCell.name === 'salary') {\n      inputValue = `$${parseInt(inputValue).toLocaleString('en-US')}`;\n    }\n\n    if (inputValue.length === 0) {\n      inputValue = cellText;\n    } else if (!validateForm([inputCell])) {\n      return;\n    }\n    td.innerText = inputValue;\n\n    pushNotification('Done',\n      `Field was successfully change.\\n`, 'success');\n  };\n\n  activeCell.addEventListener('keydown', (ev2) => {\n    if (ev2.key === 'Enter') {\n      ev2.target.blur();\n    }\n  });\n});\n\nfunction pushNotification(title, description, type) {\n  container.insertAdjacentHTML('beforeend', `\n  <div class=\"notification ${type}\" data-qa=\"notification\">\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  </div>\n  `);\n\n  const notification = document.querySelectorAll('[data-qa*=notification]');\n\n  setTimeout(() => [...notification].forEach(n => n.remove()), 2000);\n}\n\nfunction validateForm(fields) {\n  for (const field of fields) {\n    if (field.value.trim().length === 0) {\n      pushNotification('Warning',\n        `Field ${field.name} can not be empty.\\n`, 'error');\n\n      return false;\n    }\n\n    if ((field.name === 'name' && field.value.trim().length > 0)\n      && field.value.trim().length < 4) {\n      pushNotification('Error',\n        'Name can not be less than 4 letters.\\n', 'error');\n\n      return false;\n    }\n\n    if (field.name === 'age' && (field.value < 18 || field.value > 90)) {\n      pushNotification('Error',\n        'The age can not be less then 18 or more than 90.\\n', 'error');\n\n      return false;\n    }\n\n    if (container.children.length > 4) {\n      pushNotification.hidden = true;\n    }\n  }\n\n  return true;\n}\n"]}